/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Timer;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
/**
 *
 * 
 */
public class RuntimeGUI extends javax.swing.JFrame {
    private boolean startGame = false;
    private final int wheelDimensions = 420;
    private final int halfWayDimensions = 210;
    private final int degreesPerSpoke = 15;
    private boolean spinInput = false;
    private String spoke;
    /**
     * Creates new form RunetimeGUI
     */
    BufferedImage image = ImageIO.read(getClass().getClassLoader().getResource("wheelpng.png"));
    BufferedImage toModify;
    Game g = new Game();
    
    public void spinWheel(){
        try{
        spoke = g.spin();
        }
        catch(IOException ex){
            System.out.println("IOException");
        }
        toModify = image;
        int spokesToTurn = g.getRandomNumForWheel();
        double rotationRequired = Math.toRadians (degreesPerSpoke*spokesToTurn);
        double locationX = halfWayDimensions;
        double locationY = halfWayDimensions;
        AffineTransform tx = AffineTransform.getRotateInstance(rotationRequired, locationX, locationY);
        AffineTransformOp op = new AffineTransformOp(tx, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);
        jLabel2.setIcon(new ImageIcon(op.filter(toModify, null)));
        toModify = op.filter(image, null);
        spinInput = true;
    }
    public void refresh() throws IOException{
        g.setCurrent();
        jLabel1.setText("Puzzle: " + g.getCurrent());
        jLabel5.setText("$"+g.players.get(0).getMoney());
        jLabel7.setText("$"+g.players.get(1).getMoney());
        jLabel9.setText("$"+g.players.get(2).getMoney());
        int playersTurn = g.whosTurn()+1;
        jLabel11.setText("Player " + playersTurn + "'s turn.");
        jLabel12.setText("Category : " + g.getPuzzle());
    }
    public RuntimeGUI() throws IOException{
        initComponents();
        setFocusableWindowState(true);
        jLabel2.setIcon(new ImageIcon(image));
        g.newGame();
        g.importWheel();
        g.setCurrent();
        g.winPuzzleCounter();
        refresh();
        //playGame();
        
    }
    public void playGame() throws IOException{
        while(!g.win()){
        if(g.winPuzzle()){
        g.newGame();
        g.importWheel();
        g.setCurrent();
        jLabel10.setText("New Puzzle!");
        refresh();
        while(!g.winPuzzle()){
        
        }
//        int playersTurn = g.whosTurn() +1;
//        jLabel10.setText("Congratulations player "+ playersTurn + " you successfully solved the puzzle!");
//        g.winPuzzleCounter();
        }
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setFocusableWindowState(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setEditable(true);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, 180, 90));

        jLabel2.setText("x");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel8.setText("Player Three");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, -1, -1));

        jLabel9.setText("jLabel9");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, -1, -1));

        jLabel3.setText("Input letter or guess puzzle:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 576));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Spin");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 450, -1, -1));

        jLabel10.setText("Welcome! Take a Spin!");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 280, 60));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel1.setText("Puzzle :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        label1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 0, 0));
        label1.setText("V");
        jPanel1.add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 20, -1, -1));

        jLabel11.setText("Player x turn");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 270, -1, -1));

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel12.setText("Category:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, -1, -1));

        jLabel7.setText("jLabel7");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Player Two");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        jLabel5.setText("jLabel5");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("Player One");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //*Spin button
        // Rotation information
        //used code from :https://stackoverflow.com/questions/8639567/java-rotating-images
        
        if(jTextField1.getText().equals("")){
           jLabel10.setText("Please enter in a letter or guess the puzzle");
        }else{
        spinWheel();
        try{
        spinInput = true;
        if(spinInput){
                    spinInput = false;
                        while(spoke.equals("freespin")){
                            spinWheel();
                            refresh();
                        }    
                        int playersTurn = g.whosTurn() + 1;
                        if (spoke.equals("loseaturn")) {
                            g.loseATurn();
                            jLabel10.setText("Sorry you lose a turn!");
                            playersTurn = g.whosTurn() + 1;
                            refresh();
                        }else{
                            if(spoke.equals("bankrupt")){
                                g.bankrupt();
                                refresh();
                            }else{
                                String input = jTextField1.getText();
                                char check[] = input.toCharArray();
                                if(check.length == 1){
                                    char a = check[0];
                                    String outcome = g.inputChar(a);
                                    refresh();
                                    if(outcome.equals("there")) {
                                        jLabel10.setText("Correct");
                                        refresh();
                                    } else if (outcome.equals("notThere")){
                                        jLabel10.setText("Incorrect");
                                        g.changeTurn();
                                        refresh();
                                    } else if (outcome.equals("alreadyThere")) {
                                        jLabel10.setText("Already guessed");
                                        g.changeTurn();
                                        refresh();
                                    } else if (outcome.equals("puzzleComplete")){
                                        g.winPuzzleCounter();
                                        g.newGame();
                                        g.importWheel();
                                        g.setCurrent();
                                        playersTurn = g.whosTurn() + 1;
                                        jLabel10.setText("Player " + playersTurn + " solved it!, New Puzzle!");
                                        refresh();
                                    }
                                    refresh();
                                }
                                else{
                                    if(g.checkAns(input)){
                                        g.winPuzzleCounter();
                                        g.newGame();
                                        g.importWheel();
                                        g.setCurrent();
                                        playersTurn = g.whosTurn() + 1;
                                        jLabel10.setText("Player " + playersTurn + "solved it!, New Puzzle!");
                                        refresh();
                                    }else{
                                        jLabel10.setText("Incorrect!");
                                        g.changeTurn();
                                    }
                                    refresh();
                                }
                                refresh();
                            }
                        }
                    }
        refresh();
        }
        catch(IOException ex){
            
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException{
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RuntimeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RuntimeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RuntimeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RuntimeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try{
                    new RuntimeGUI().setVisible(true);
                }catch(IOException ex){
                    System.out.println(ex.toString());
                }
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables

}
